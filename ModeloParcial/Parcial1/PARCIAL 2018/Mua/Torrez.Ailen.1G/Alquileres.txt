
typedef struct
{
    int dia;
    int mes;
    int anio;

} eFecha;

typedef struct
{
    int codAlquiler;
    int codJuego;
    int codCliente;
    eFecha fecha;
    int isEmpty;

} eAlquileres;

void obtenerDescJuegos(eJuego j[], int tamj, int idCateg, char* cadena);
void obtenerDescCategorias(eCategoria c[], int tamc, int idC, char* cadena);
void cargarJuegos(eJuego j[], int tamj, eCategoria c[], int tamc);
void listarJuegos(eJuego j[], int tam, eCategoria c[]);
void cargarCategoria(eCategoria c[], int tamc);
void listarCategorias(eCategoria c[], int tam);
void buscarIdCategoria(eCategoria x[], int tamc, int idCategoria);

void inicializarAlquiler(eAlquileres x[], int tam);
int buscarLibreAlquiler(eAlquileres x[], int tam);
void mostrarAlquiler(eAlquileres unAlquiler, eJuego j[], int tamj, eCliente e[], int tame);
int buscarAlquiler(eAlquileres x[], int tam, int idAlquiler);
void altaAlquiler(eAlquileres* a, int tama, eCliente c[], int tamc, int* pId);

int buscarLibreAlquiler(eAlquileres x[], int tam)
{
    int indice = -1;
    int i;

    for( i=0; i < tam; i++)
    {
        if( x[i].isEmpty == 1)
        {
            indice = i;
            break;
        }
    }
    return indice;
}

void inicializarAlquiler(eAlquileres x[], int tam)
{
    int i;
    for( i=0; i < tam; i++)
    {
       x[i].isEmpty = 1;
    }
}

int buscarAlquiler(eAlquileres x[], int tam, int idAlquiler)
{
    int indice = -1;
    int i;
    for(i=0; i < tam; i++)
    {
        if( x[i].codAlquiler == idAlquiler && x[i].isEmpty == 0)
        {
            indice = i;
            break;
        }
    }
    return indice;
}

void altaAlquiler(eAlquileres* a, int tama, eCliente c[], int tamc, int* pId)
{
    int idAlquiler = *pId;
    eFecha fecha;
    eAlquileres nuevoAlquiler;
    int indice;

    indice = buscarLibreAlquiler(a, tama);

    if(indice == -1)
    {
        printf("No se pueden cargar mas alquileres\n\n");
    }
    else
    {
        nuevoAlquiler.codAlquiler = idAlquiler;

        mostrarClientes(c,tamc);

        printf("\nIngrese dia: ");
        scanf("%d", &fecha.dia);

        printf("Ingrese mes: ");
        scanf("%d", &fecha.mes);

        printf("Ingrese anio: ");
        scanf("%d", &fecha.anio);

        nuevoAlquiler.fecha = fecha;

        *pId = idAlquiler + 1;

        nuevoAlquiler.isEmpty = 0;

        a[indice] = nuevoAlquiler;
    }
}

MOSTRAR EMPLEADOS, POR EL ID QUE ELEJIS:
IMPORTES EN UN ACUMULADOR
ALQUILERES EN UN CONTADOR
DOS FOR, UNN FOR RECORRIENDO LOS ALQUILERES DE CADA CLIENTE Y RECORRIENDO LOS JUEGOS DE ESE CLIENTE Y  SE SACA EL PROMEDIO



CSV LEVANTO CON  SCANF, GUARDO CON BUFFER
BINN CON FREAD CON FREAD GUARDO, PPUNTERO A ESTRUCT

FILE 
F=FOPEN
